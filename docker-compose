###################
#DockerPi Server 11/08/2018
###################

version: "3.6"
services:
#Portainer is a container managment GUI tool
 portainer:
    image: portainer/portainer
    container_name: portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
      - ${USERDIR}/docker/shared:/shared
    environment:
      - TZ=${TZ}
#Heimdall is a landing page/link organiser - a GUI bookmark mgr of sorts!
 heimdall:
    container_name: heimdall
    restart: unless-stopped
    image: lsioarmhf/heimdall
    volumes:
      - ${USERDIR}/docker/heimdall:/config
      - ${USERDIR}/docker/shared:/shared
    ports:
      - 9080:80
      - 9443:443
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#Mariadb is an open-source MYSQL alternative. Used to host databases on the server
 mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    hostname: mariadb
    volumes:
        - ${USERDIR}/docker/mariadb:/config
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: host
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#Pihole handles DNS resolution/forwarding and advert blocking
 pihole:
    image: pihole/pihole:v4.0_armhf
    container_name: pihole
    volumes:
      - ${USERDIR}/docker/pihole:/etc/pihole/
#Note this log file needs to be created before the container is launched.
	  - ${USERDIR}/docker/pihole/logs/pihole.log:/var/log/pihole.log
      - ${USERDIR}/docker/shared:/shared
	ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 81:80/tcp
      - 444:443/tcp
	restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
	  - ServerIP: 192.168.10.20
#Unifi controller for the access points and router
 unifi:
    image: ryansch/unifi-rpi:5.9
	container_name: unifi
    volumes:
      - ${USERDIR}/docker/unifi:/usr/lib/unifi/data
	  - ${USERDIR}/docker/unifi/logs:/usr/lib/unifi/logs
	  - ${USERDIR}/docker/shared:/shared
	ports:
      - 3478:3478/udp
      - 6789:6789/tcp
      - 8080:8080/tcp
      - 8081:8081/tcp
      - 8443:8443/tcp
	  - 8843:8843/tcp
	  - 8880:8880/tcp
	restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#Node-red is an automation and api access tool
 node-red:
    container_name: node-red
    restart: unless-stopped
    image: nodered/node-red-docker:rpi
	volumes:
      - ${USERDIR}/docker/node-red:/data
      - ${USERDIR}/docker/shared:/shared
    ports:
      - 1880:1880
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
